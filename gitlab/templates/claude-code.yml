# Claude Code GitLab CI/CD Template
# 
# Include this template in your .gitlab-ci.yml:
#   include:
#     - remote: 'https://raw.githubusercontent.com/YOUR_USERNAME/claude-code-action/main/gitlab/templates/claude-code.yml'
#
# This template provides a single manual job called 'claude' that can be triggered
# from the GitLab pipeline UI to run Claude on any issue or merge request.
#
# Required CI/CD variables:
#   - CLAUDE_BOT_TOKEN: GitLab Personal Access Token with api and write_repository scopes
#   - ANTHROPIC_API_KEY: Your Anthropic API key (or CLAUDE_CODE_OAUTH_TOKEN for Claude Pro/Teams)
#
# Optional CI/CD variables:
#   - CLAUDE_MODEL: Model to use (see https://docs.anthropic.com/en/docs/about-claude/models/overview)
#   - CLAUDE_ALLOWED_TOOLS: Comma-separated list of allowed tools
#   - CLAUDE_DISALLOWED_TOOLS: Comma-separated list of disallowed tools
#   - CI_ISSUE_IID or CI_MERGE_REQUEST_IID: Specify which issue/MR to analyze

stages:
  - claude

variables:
  CLAUDE_IMAGE: "node:20-slim"
  CLAUDE_TRIGGER_PHRASE: "@claude"
  # CLAUDE_MODEL: "claude-3-sonnet-20240229"
  CLAUDE_TIMEOUT_MINUTES: "30"
  CLAUDE_MAX_TURNS: "25"

.claude-base:
  stage: claude
  image: $CLAUDE_IMAGE
  before_script:
    # Install git, bun, and jq
    - apt-get update && apt-get install -y git curl unzip jq
    - curl -fsSL https://bun.sh/install | bash
    - export PATH="$HOME/.bun/bin:$PATH"
    
    # Configure git
    - git config --global safe.directory "$CI_PROJECT_DIR"
    
    # Clone the repository with the bot token
    - git clone https://oauth2:${CLAUDE_BOT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git /tmp/repo
    - cd /tmp/repo
    - git checkout $CI_COMMIT_REF_NAME || git checkout -b $CI_COMMIT_REF_NAME origin/$CI_COMMIT_REF_NAME
    
    # Install Claude Code CLI
    - npm install -g @anthropic-ai/claude-code
    
    # Clone and install Claude Code GitLab from GitHub
    - git clone https://github.com/L-U-C-K-Y/claude-code-action.git /tmp/claude-code-action
    - cd /tmp/claude-code-action/gitlab && bun install
    - chmod +x /tmp/claude-code-action/gitlab/src/main.ts
    - chmod +x /tmp/claude-code-action/gitlab/src/mcp/gitlab-comment-server.ts
    - export PATH="/tmp/claude-code-action/gitlab/src:$PATH"
    
  variables:
    GITLAB_TOKEN: $CLAUDE_BOT_TOKEN
    GIT_STRATEGY: none  # We clone manually with the bot token
  
  artifacts:
    when: always
    paths:
      - claude-*.log
    expire_in: 1 week

# Manual trigger for Claude
# This single job can be manually triggered to run Claude on any issue or MR
claude:
  extends: .claude-base
  rules:
    - when: manual
  script:
    - cd /tmp/repo
    - |
      # Try to detect MR if not provided
      if [ -z "$CI_MERGE_REQUEST_IID" ] && [ -z "$CI_ISSUE_IID" ] && [ "$CI_COMMIT_REF_NAME" != "main" ] && [ "$CI_COMMIT_REF_NAME" != "master" ]; then
        echo "Not in a merge request pipeline, looking for MR for branch $CI_COMMIT_REF_NAME"
        
        # URL encode the branch name for the API request
        ENCODED_BRANCH=$(echo -n "$CI_COMMIT_REF_NAME" | jq -sRr @uri)
        echo "URL-encoded branch name: $ENCODED_BRANCH"
        
        # Try the REST API to find associated merge request
        MR_DATA=$(curl --silent --header "PRIVATE-TOKEN: ${CLAUDE_BOT_TOKEN}" \
          "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests?source_branch=${ENCODED_BRANCH}&state=opened")
        
        # Parse the response with jq to safely extract MR IID
        if echo "$MR_DATA" | jq -e 'length > 0' > /dev/null 2>&1; then
          export CI_MERGE_REQUEST_IID=$(echo "$MR_DATA" | jq -r '.[0].iid')
          echo "Found merge request IID: $CI_MERGE_REQUEST_IID"
        else
          echo "No open merge request found for branch $CI_COMMIT_REF_NAME"
        fi
      fi
      
      # Provide feedback about what we're running
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        echo "Running for MR #$CI_MERGE_REQUEST_IID"
      elif [ -n "$CI_ISSUE_IID" ]; then
        echo "Running for Issue #$CI_ISSUE_IID"
      else
        echo "Running in manual mode - no issue or MR specified"
        echo "To specify a target, set CI_ISSUE_IID or CI_MERGE_REQUEST_IID when triggering the pipeline"
      fi
    - /tmp/claude-code-action/gitlab/src/main.ts 2>&1 | tee $CI_PROJECT_DIR/claude-manual.log